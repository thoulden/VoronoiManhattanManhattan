name: build-and-deploy

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps
        shell: bash
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build all posters
        shell: bash
        run: |
          # try all combos even if one is slow
          source .venv/bin/activate
          mkdir -p site
          [ -f site/index.html ] && cp site/index.html site/index.html || true

          QUERIES=("railway=station" "amenity=cafe" "tourism=museum" "amenity=library" "shop=bakery")
          METRICS=("l1" "l2")
          L1_ROTATE=29
          CITY="New York County, New York, USA"

          for q in "${QUERIES[@]}"; do
            SLUG=$(echo "$q" | sed 's/[^A-Za-z0-9=]/_/g; s/=/_/')
            for metric in "${METRICS[@]}"; do
              OUT="site/manhattan_${metric}_${SLUG}.svg"
              echo "=== Building $OUT (query='$q' metric=$metric) ==="

              ROT=""
              if [ "$metric" = "l1" ]; then ROT="--l1-rotate-deg $L1_ROTATE"; fi

              n=0
              until [ $n -ge 3 ]; do
                python src/voronoi_l1.py \
                  --city "$CITY" \
                  --query "$q" \
                  --metric "$metric" \
                  $ROT \
                  --grid-res 20 \
                  --figsize "24x36" \
                  --out "$OUT" && break
                n=$((n+1))
                echo "retry $n/3 after waitâ€¦"; sleep 10
              done

              if [ ! -f "$OUT" ]; then
                echo "[skip] Did not produce $OUT (too few sites or slow Overpass). Continuing."
              fi
            done
          done

          echo "Files in site/:"
          ls -lh site || true

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

